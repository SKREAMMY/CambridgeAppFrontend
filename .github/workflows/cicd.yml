name: deploy reactjs application

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v4
      - name: Create .env File
        run: |
          echo "VITE_APP_WEATHER_URL = https://api.openweathermap.org/data/2.5/weather?q=Cambridge,uk&units=metric&appid=" >> .env
          echo "VITE_APP_WEATHER_API = 83581cb6f6a7f8ba2d9f33fb7898748e" >> .env
          echo "VITE_APP_BASEURL = http://${{secrets.SERVER_IP}}:5050/" >> .env
          echo "VITE_APP_NODEENV = production" >> .env
          echo "VITE_APP_GLOBAL_URL = news/global" >> .env
          echo "VITE_APP_LOCAL_URL = news/local" >> .env

      - name: Setting up the node environment
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install dependencies
        run: npm install

      - name: Build react app
        run: npm run build

      - name: Login to Docker hub
        run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}

      - name: Build docker image
        run: docker build -t ${{secrets.DOCKER_USERNAME}}/cambridgeappfrontendimage .

      - name: Push the image to the dockerhub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/cambridgeappfrontendimage:latest

      - name: run docker container
        run: |
          sudo docker stop ${{ secrets.DOCKER_USERNAME }}/cambridgeappfrontendimage || true
          sudo docker rm ${{ secrets.DOCKER_USERNAME }}/cambridgeappfrontendimage || true
      - name: Delete all unsued images
        run: |
          sudo docker image prune -a -f

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Deploy Docker image
        run: |
          sudo docker pull ${{secrets.DOCKER_USERNAME}}/cambridgeappfrontendimage:latest

      - name: Remove existing docker container if already exists.
        shell: /usr/bin/bash -e {0}
        run: |
          CONTAINER_NAME="cambridgeappfrontendcontainer"
          RUNNING_CONTAINER=$(docker ps -aq --filter "name=$CONTAINER_NAME")
          RUNNING_CONTAINER="${RUNNING_CONTAINER//[[:space:]]//}"
          echo "Container RC '$RUNNING_CONTAINER'"
          if [ -n "$RUNNING_CONTAINER" ]; then
            echo "Container is runnning, stopping and removing"
            sudo docker stop $CONTAINER_NAME || true
            sudo docker rm $CONTAINER_NAME || true
          fi
      - name: Run the container
        run: |
          sudo docker run -d -p 80:80 --name cambridgeappfrontendcontainer --rm ${{ secrets.DOCKER_USERNAME }}/cambridgeappfrontendimage
